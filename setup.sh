#!/bin/bash

# Claude Context Wrapper - Quick Setup Script
# One-liner to set up context in any project
# Created by BuildAppolis (www.buildappolis.com)

# This script can be run with:
# curl -sSL https://raw.githubusercontent.com/buildappolis/claude-context-wrapper/main/setup.sh | bash -s -- [type]

set -e

# Default to TypeScript if no argument provided
CONTEXT_TYPE="${1:-ts}"

# Colors (cross-platform)
if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]] || [[ "$OSTYPE" == "win32" ]]; then
    RED=''
    GREEN=''
    YELLOW=''
    BLUE=''
    NC=''
else
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    NC='\033[0m'
fi

echo -e "${BLUE}Claude Context Wrapper - Quick Setup${NC}"
echo "Setting up context in current directory: $(pwd)"
echo ""

# Create .claude directory
mkdir -p .claude

# Create context file based on type
case "$CONTEXT_TYPE" in
    ts|typescript)
        cat > .claude/context.ts << 'EOF'
// Claude Context - TypeScript
// Auto-generated by BuildAppolis Claude Context Wrapper

const context = {
    timestamp: new Date().toISOString(),
    project: process.cwd().split('/').pop(),
    nodeVersion: process.version,
    environment: process.env.NODE_ENV || 'development',
    // Add your custom context here
};

console.log(Object.entries(context)
    .map(([k, v]) => `${k}: ${v}`)
    .join(', '));
EOF
        echo -e "${GREEN}✓${NC} Created .claude/context.ts"
        ;;
        
    py|python)
        cat > .claude/context.py << 'EOF'
#!/usr/bin/env python3
# Claude Context - Python
# Auto-generated by BuildAppolis Claude Context Wrapper

import os
from datetime import datetime

context = {
    'timestamp': datetime.now().isoformat(),
    'project': os.path.basename(os.getcwd()),
    'environment': os.getenv('ENV', 'development'),
    # Add your custom context here
}

print(', '.join([f"{k}: {v}" for k, v in context.items()]))
EOF
        chmod +x .claude/context.py
        echo -e "${GREEN}✓${NC} Created .claude/context.py"
        ;;
        
    txt|text)
        cat > .claude/context.txt << 'EOF'
Project: $(basename $PWD)
Tech Stack: [Add your tech stack]
Current Focus: [Add current focus]
Notes: [Add any relevant notes]
EOF
        echo -e "${GREEN}✓${NC} Created .claude/context.txt"
        ;;
        
    *)
        echo -e "${RED}Error:${NC} Invalid type. Use 'ts', 'py', or 'txt'"
        exit 1
        ;;
esac

# Create config file
cat > .claude/config.json << 'EOF'
{
  "includeGitInfo": true,
  "customContext": {
    "team": "development",
    "priority": "feature-development"
  },
  "contextTimeout": 3
}
EOF
echo -e "${GREEN}✓${NC} Created .claude/config.json"

echo ""
echo -e "${GREEN}Setup complete!${NC}"
echo ""
echo "Next steps:"
echo "1. Edit .claude/context.${CONTEXT_TYPE} to customize your context"
echo "2. Use 'claude' with your context automatically included"
echo ""
echo "Example: claude \"create a new API endpoint\""
echo ""
echo "For the full wrapper with 'c' command, install from:"
echo "https://github.com/buildappolis/claude-context-wrapper"